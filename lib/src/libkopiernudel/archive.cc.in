//    Copyright (c) 2018 Norbert RÃ¼hl
//
//    This software is provided 'as-is', without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software.
//
//      Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions:
//
//      1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
//
//      2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
//
//      3. This notice may not be removed or altered from any source distribution.

#include <libkopiernudel/archive.hh>

#include <string>

const std::array<libkopiernudel::kopiernudel,@PASTAS_SIZE@ +1> libkopiernudel::archive::kopiernudeln() {
    using namespace libkopiernudel;
    using namespace std;
    return array<kopiernudel,@PASTAS_SIZE@ +1>
        {
            kopiernudel("","")
            @expression@
        };

}

std::vector<libkopiernudel::kopiernudel> libkopiernudel::archive::findByName(std::string any){
    using namespace libkopiernudel;
    using namespace std;
    vector<kopiernudel> results;
    for(kopiernudel k : archive::kopiernudeln()){
        if(k.getTitle().find(any)!= string::npos){
            results.push_back(k);
        }
    }
    return results;
}

std::vector<libkopiernudel::kopiernudel> libkopiernudel::archive::findByText(std::string any){
    using namespace libkopiernudel;
    using namespace std;
    vector<kopiernudel> results;
    for(kopiernudel k : archive::kopiernudeln()){
        if(k.getPasta().find(any)!= string::npos){
            results.push_back(k);
        }
    }
    return results;
}

std::vector<libkopiernudel::kopiernudel> libkopiernudel::archive::findByAny(std::string any){
    using namespace libkopiernudel;
    using namespace std;
    vector<kopiernudel> results;
    for(kopiernudel k : archive::kopiernudeln()){
        if(k.getPasta().find(any)!= string::npos || k.getTitle().find(any)!=string::npos){
         results.push_back(k);
        }
    }
    return results;
}